<ServerManagerConfiguration>
  <ProxyGroup name="filters">
    <SourceProxy
        name="HarmonicField"
        class="ttkHarmonicField"
        label="TTK HarmonicField">
      <Documentation
          long_help="TTK plugin for harmonic field computations."
          short_help="TTK plugin for harmonic field computations.">
        This plugin takes a list of sources (a set of points with
        their global identifiers attached to them) with a scalar
        constraint on each of them and computes an harmonic field by
        solving a laplacian equation.
        Related publication
        "Dynamic harmonic fields for surface processing"
        Kai Xu, Hao Zhang, Daniel Cohen-Or, Yueshan Xiong
        Computers and Graphics 2009.
      </Documentation>

      <InputProperty
          name="Domain"
          label="Input geometry"
          port_index="0"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_scalars" number_of_components="1">
          <Property name="Domain" function="FieldDataSelection" />
        </InputArrayDomain>
        <Documentation>
          Data-set to process.
        </Documentation>
      </InputProperty>

      <InputProperty
          name="Constraints"
          port_index="1"
          label="Input constraints"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPointSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_scalars" number_of_components="1">
          <Property name="Constraints" function="FieldDataSelection" />
        </InputArrayDomain>
        <Documentation>
          Harmonic field constraints.
        </Documentation>
      </InputProperty>

      <StringVectorProperty
          name="InputConstraintFieldName"
          command="SetInputScalarFieldName"
          label="Constraint value field"
          number_of_elements="1"
          animateable="0"
          >
        <ArrayListDomain
            name="array_list"
            default_values="0"
            >
          <RequiredProperties>
            <Property
                name="Constraints"
                function="Input"
                />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          Select the constraint value scalar field.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
          name="ForceConstraintIdentifiers"
          label="Force Constraint Identifiers"
          command="SetForceConstraintIdentifiers"
          number_of_elements="1"
          default_values="0"
          panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          Use a non-default identifiers field for the constraint.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
          name="UseCotanWeights"
          label="Use cotan weights method"
          command="SetUseCotanWeights"
          number_of_elements="1"
          default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Use the more precise cotangent weights matrix instead of the
          laplacian graph.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
          name="SolvingMethod"
          label="Solving method"
          command="SetSolvingMethod"
          number_of_elements="1"
          default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Auto"/>
          <Entry value="1" text="Cholesky"/>
          <Entry value="2" text="Iterative"/>
        </EnumerationDomain>
        <Documentation>
          This property allow the user to select a solving
          method. Cholesky simply decomposes the laplacian matrix, and
          Iterative uses the Conjugate Gradients Iterative method to
          solve the laplacian equation. Auto triggers an heuristic
          which will try to select the best option between the two former.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
          name="LogAlpha"
          label="Penalty value"
          command="SetLogAlpha"
          number_of_elements="1"
          default_values="5"
          panel_visibility="advanced"
          >
        <Documentation>
          This property allow the user to select a penalty value for
          solving the harmonic equation. A lower penalty should lead
          to a better harmonic solution at the expense of computation
          time.
        </Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty
          name="InputIdentifiersFieldName"
          command="SetInputIdentifiersFieldName"
          label="Constraint identifier field"
          number_of_elements="1"
          animateable="0"
          panel_visibility="advanced"
          >
        <ArrayListDomain
            name="array_list"
            default_values="0"
            >
          <RequiredProperties>
            <Property name="Constraints" function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Hints>
          <PropertyWidgetDecorator
              type="GenericDecorator"
              mode="visibility"
              property="ForceConstraintIdentifiers"
              value="1" />
        </Hints>
        <Documentation>
          Select the vertex identifier scalar field in the sources.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="OutputScalarFieldType"
        label="Output field type"
        command="SetOutputScalarFieldType"
        number_of_elements="1"
        default_values="0" >
        <EnumerationDomain name="enum">
          <Entry value="0" text="Float" />
          <Entry value="1" text="Double" />
        </EnumerationDomain>
        <Documentation>
          Select the type of the output scalar field.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="OutputScalarFieldName"
        command="SetOutputScalarFieldName"
        label="Output field name"
        number_of_elements="1"
        default_values="OutputHarmonicField">
        <Documentation>
          Select the name of the output scalar field.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
          name="UseAllCores"
          command="SetUseAllCores"
          label="Use All Cores"
          number_of_elements="1"
          default_values="1"
          panel_visibility="advanced"
          >
        <BooleanDomain name="bool"/>
        <Documentation>
          Use all available cores.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
          name="ThreadNumber"
          command="SetThreadNumber"
          label="Thread Number"
          number_of_elements="1"
          default_values="1" panel_visibility="advanced"
          >
        <IntRangeDomain name="range" min="1" max="100" />
        <Hints>
          <PropertyWidgetDecorator
              type="GenericDecorator"
              mode="visibility"
              property="UseAllCores"
              value="0" />
        </Hints>
        <Documentation>
          Thread number.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
          name="DebugLevel"
          command="SetdebugLevel_"
          label="Debug Level"
          number_of_elements="1"
          default_values="3" panel_visibility="advanced">
        <IntRangeDomain name="range" min="0" max="100" />
        <Documentation>
          Debug level.
        </Documentation>
      </IntVectorProperty>

      <PropertyGroup panel_widget="Line" label="Testing">
        <Property name="UseAllCores" />
        <Property name="ThreadNumber" />
        <Property name="DebugLevel" />
      </PropertyGroup>

      <PropertyGroup panel_widget="Line" label="Input options">
        <Property name="UseCotanWeights" />
        <Property name="SolvingMethod" />
        <Property name="InputConstraintFieldName" />
        <Property name="ForceConstraintIdentifiers" />
      </PropertyGroup>

      <PropertyGroup panel_widget="Line" label="Output options">
        <Property name="OutputScalarFieldType"/>
        <Property name="OutputScalarFieldName"/>
      </PropertyGroup>

      <Hints>
        <ShowInMenu category="TTK - Misc" />
      </Hints>
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
